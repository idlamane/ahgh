<?php

namespace Amb\AdherentBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * DesistementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DesistementRepository extends EntityRepository
{
	public function ListDesistement($filter =null){
		$date_debut = new \Datetime('01-01-'.date('Y'));
		$date_fin = new \Datetime('31-12-'.date('Y'));
		$qb = $this->createQueryBuilder('d');
		$qb->add('select', 'd detail, 
							(SELECT SUM(r.montant) FROM AmbDebitBundle:Depense r WHERE r.adherent = d.adherent AND r.adhesion = d.adhesion AND r.matricule = d.matricule) montant,
							(SELECT SUM(e.montant) FROM AmbCreditBundle:Encaissement e WHERE e.adherent = d.adherent AND e.adhesion = d.adhesion AND e.matricule = d.matricule AND e.statut = \'valid\') versement')
		   ->add('from', 'AmbAdherentBundle:Desistement d');
	  	   //->leftJoin('d.depenses', 'r', 'WITH', 'r.adherent = d.adherent AND r.adhesion = d.adhesion AND r.matricule = d.matricule ');
	    $qb->orderby('d.date_desistement');
	    $qb->groupBy('d.id');
	    //$qb->setParameters(array('statut' => 'valid'));
		if($filter == 'nofilter'){
			$qb->where('d.date_desistement BETWEEN :date_debut AND :date_fin')
	           ->setParameters(array('date_debut' => $date_debut, 'date_fin' => $date_fin));
		}
	    return $qb;				
	}

	public function TotalRemboursement($filter =null){
		$date_debut = new \Datetime('01-01-'.date('Y'));
		$date_fin = new \Datetime('31-12-'.date('Y'));
		$qb = $this->createQueryBuilder('d');
		$qb->add('select', 'SUM(r.montant) montant')
		   ->add('from', 'AmbAdherentBundle:Desistement d')
	  	   ->leftJoin('d.depenses', 'r');
		if($filter == 'nofilter'){
			$qb->where('d.date_desistement BETWEEN :date_debut AND :date_fin')
	           ->setParameters(array('date_debut' => $date_debut, 'date_fin' => $date_fin));
		}
	    return $qb;					
	}
}
