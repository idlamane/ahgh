<?php

namespace Amb\AdherentBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * AdherentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AdherentRepository extends EntityRepository
{
	
	public function FilterAdherent($statut = null){
		$qb = $this->createQueryBuilder('a');
		$qb->add('select', 'a adh, COUNT(d) as nbappt')
		   ->add('from', 'AmbAdherentBundle:Adherent a')
	  	   ->leftJoin('a.adhesions', 'd');

		switch ($statut) {
		    case 2:
		        $qb->add('having', 'COUNT(d) > 0');
		        break;
		    case 3:
		        $qb->add('having', 'COUNT(d) = 0');
		        break;
		}   
	  	$qb->groupBy('a.id');
	    
	    return $qb->getQuery()
	              ->getResult();				
	}
	
	public function AdherentForGL($end){
		$qb = $this->createQueryBuilder('a');
		$qb->add('select', 'a')
		   ->add('from', 'AmbAdherentBundle:Adherent a')
	  	   ->leftJoin('a.adhesions', 'ad')
	  	   ->addSelect('ad')
	  	   ->leftJoin('ad.encaissements', 'e', 'WITH', 'e.adherent = a.id AND e.adhesion = ad.id AND e.matricule = ad.matricule')
	  	   ->addSelect('e')
	  	   ->leftJoin('a.desistements', 'd')
	  	   ->addSelect('d')
	  	   ->where('a.id = 83')
	  	   ->andwhere('e.statut = :statut AND e.date_Operation <= :end')
	       ->setParameters(array('statut' => "valid", 
	       						 'end' => $end->format('Y-m-d')))
           ->orderBy('ad.matricule', 'ASC');
	    
	    return $qb->getQuery()
	              ->getResult();				
	}
}
